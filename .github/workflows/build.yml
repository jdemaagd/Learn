name: Build Template

on:
  push:
    branches: [ main, dev ]

  pull_request:
    branches: [ main, dev ]

jobs:
  start:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

  lint:
    name: Perform Lint Check
    needs: [ start ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Run lint
        run: ./gradlew lintDebug

      - name: Upload html test report
        uses: actions/upload-artifact@v4
        with:
          name: lint.html
          path: app/build/reports/lint-results-debug.html

  unit-test:
    name: Perform Unit Testing
    needs: [ lint ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup JAVA 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Run tests
        run: ./gradlew test

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: unit_test_report
          path: app/build/reports/test/testDebugUnitTest/

#      - name: Decode Keystore
#        id: decode_keystore
#        uses: timheuer/base64-to-file@v1.2
#        with:
#          fileName: 'firebug_keystore.jks'
#          fileDir: '/home/runner/work/${{ env.app }}/${{ env.app }}/app/keystore/'
#          encodedString: ${{ secrets.SIGNING_KEY }}

#      - name: Grant gradlew permission
#        run: chmod +x gradlew

#      - name: Sign APK
#        run: ./gradlew :app:assembleRelease
#        env:
#          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
#          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
#          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}

  #      - name: Verify Signature
  #        run: $ANDROID_SDK_ROOT/build-tools/33.0.1/apksigner verify --print-certs app/build/outputs/apk/release/${{ env.app }}_${{ env.version }}.apk

  #      - name: Upload APK
  #        uses: actions/upload-artifact@v3.1.2
  #        with:
  #          name: ${{ env.app }}
  #          path: app/build/outputs/apk/release/${{ env.app }}_${{ env.version }}.apk
